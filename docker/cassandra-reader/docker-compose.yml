# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

# This docker-compose file contains optional cassandra-reader. Since it's optional, this file is
# dependent of docker-compose file from <project_root>/docker. In order to run this service, execute command:
# docker compose -f docker/docker-compose.yml -f docker/addons/cassandra-reader/docker-compose.yml up
# from project root.

networks:
  supermq-base-net:

services:
  cassandra-reader:
    image: supermq/cassandra-reader:${SMQ_RELEASE_TAG}
    container_name: supermq-cassandra-reader
    restart: on-failure
    environment:
      SMQ_CASSANDRA_READER_LOG_LEVEL: ${SMQ_CASSANDRA_READER_LOG_LEVEL}
      SMQ_CASSANDRA_READER_HTTP_HOST: ${SMQ_CASSANDRA_READER_HTTP_HOST}
      SMQ_CASSANDRA_READER_HTTP_PORT: ${SMQ_CASSANDRA_READER_HTTP_PORT}
      SMQ_CASSANDRA_READER_HTTP_SERVER_CERT: ${SMQ_CASSANDRA_READER_HTTP_SERVER_CERT}
      SMQ_CASSANDRA_READER_HTTP_SERVER_KEY: ${SMQ_CASSANDRA_READER_HTTP_SERVER_KEY}
      SMQ_CASSANDRA_PORT: ${SMQ_CASSANDRA_PORT}
      SMQ_CASSANDRA_CLUSTER: ${SMQ_CASSANDRA_CLUSTER}
      SMQ_CASSANDRA_KEYSPACE: ${SMQ_CASSANDRA_KEYSPACE}
      SMQ_CASSANDRA_USER: ${SMQ_CASSANDRA_USER}
      SMQ_CASSANDRA_PASS: ${SMQ_CASSANDRA_PASS}
      SMQ_CLIENTS_AUTH_GRPC_URL: ${SMQ_CLIENTS_AUTH_GRPC_URL}
      SMQ_CLIENTS_AUTH_GRPC_TIMEOUT: ${SMQ_CLIENTS_AUTH_GRPC_TIMEOUT}
      SMQ_CLIENTS_AUTH_GRPC_CLIENT_CERT: ${SMQ_CLIENTS_AUTH_GRPC_CLIENT_CERT:+/clients-grpc-client.crt}
      SMQ_CLIENTS_AUTH_GRPC_CLIENT_KEY: ${SMQ_CLIENTS_AUTH_GRPC_CLIENT_KEY:+/clients-grpc-client.key}
      SMQ_CLIENTS_AUTH_GRPC_SERVER_CA_CERTS: ${SMQ_CLIENTS_AUTH_GRPC_SERVER_CA_CERTS:+/clients-grpc-server-ca.crt}
      SMQ_AUTH_GRPC_URL: ${SMQ_AUTH_GRPC_URL}
      SMQ_AUTH_GRPC_TIMEOUT: ${SMQ_AUTH_GRPC_TIMEOUT}
      SMQ_AUTH_GRPC_CLIENT_CERT: ${SMQ_AUTH_GRPC_CLIENT_CERT:+/auth-grpc-client.crt}
      SMQ_AUTH_GRPC_CLIENT_KEY: ${SMQ_AUTH_GRPC_CLIENT_KEY:+/auth-grpc-client.key}
      SMQ_AUTH_GRPC_SERVER_CA_CERTS: ${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+/auth-grpc-server-ca.crt}
      SMQ_SEND_TELEMETRY: ${SMQ_SEND_TELEMETRY}
      SMQ_CASSANDRA_READER_INSTANCE_ID: ${SMQ_CASSANDRA_READER_INSTANCE_ID}
    ports:
      - ${SMQ_CASSANDRA_READER_HTTP_PORT}:${SMQ_CASSANDRA_READER_HTTP_PORT}
    networks:
      - supermq-base-net
    volumes:
      - ../../ssl/certs:/etc/ssl/certs
      # Auth gRPC client certificates
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_AUTH_GRPC_CLIENT_CERT:-./ssl/certs/dummy/client_cert}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_CERT:+.crt}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_AUTH_GRPC_CLIENT_KEY:-./ssl/certs/dummy/client_key}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_KEY:+.key}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_AUTH_GRPC_SERVER_CA_CERTS:-./ssl/certs/dummy/server_ca}
        target: /auth-grpc-server-ca${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+.crt}
        bind:
          create_host_path: true
      # Clients gRPC mTLS client certificates
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_CLIENTS_AUTH_GRPC_CLIENT_CERT:-ssl/certs/dummy/client_cert}
        target: /clients-grpc-client${SMQ_CLIENTS_AUTH_GRPC_CLIENT_CERT:+.crt}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_CLIENTS_AUTH_GRPC_CLIENT_KEY:-ssl/certs/dummy/client_key}
        target: /clients-grpc-client${SMQ_CLIENTS_AUTH_GRPC_CLIENT_KEY:+.key}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_CLIENTS_AUTH_GRPC_SERVER_CA_CERTS:-ssl/certs/dummy/server_ca}
        target: /clients-grpc-server-ca${SMQ_CLIENTS_AUTH_GRPC_SERVER_CA_CERTS:+.crt}
        bind:
          create_host_path: true
