# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

# This docker-compose file contains optional opcua-adapter and opcua-redis services
# for the SupeMQ platform. Since this services are optional, this file is dependent on the
# docker-compose.yml file from <project_root>/docker/. In order to run these services,
# core services, as well as the network from the core composition, should be already running.

networks:
  supermq-base-net:

volumes:
  supermq-contrib-twins-db-volume:
  supermq-contrib-twins-db-configdb-volume:

services:
  twins-redis:
    image: redis:7.2.4-alpine
    container_name: supermq-contrib-twins-redis
    restart: on-failure
    networks:
      - supermq-base-net

  twins-db:
    image: mongo:bionic
    command: mongod --port ${SMQ_TWINS_DB_PORT}
    container_name: magisupermq-contribstrala-twins-db
    restart: on-failure
    environment:
      MONGO_INITDB_DATABASE: ${SMQ_TWINS_DB_NAME}
    ports:
      - ${SMQ_TWINS_DB_PORT}:${SMQ_TWINS_DB_PORT}
    networks:
      supermq-base-net:
    volumes:
      - supermq-contrib-twins-db-volume:/data/db
      - supermq-contrib-twins-db-configdb-volume:/data/configdb

  twins:
    image: supermq-contrib/twins:${SMQ_RELEASE_TAG}
    container_name: supermq-contrib-twins
    restart: on-failure
    environment:
      SMQ_TWINS_LOG_LEVEL: ${SMQ_TWINS_LOG_LEVEL}
      SMQ_TWINS_STANDALONE_ID: ${SMQ_TWINS_STANDALONE_ID}
      SMQ_TWINS_STANDALONE_TOKEN: ${SMQ_TWINS_STANDALONE_TOKEN}
      SMQ_TWINS_CHANNEL_ID: ${SMQ_TWINS_CHANNEL_ID}
      SMQ_TWINS_HTTP_HOST: ${SMQ_TWINS_HTTP_HOST}
      SMQ_TWINS_HTTP_PORT: ${SMQ_TWINS_HTTP_PORT}
      SMQ_TWINS_HTTP_SERVER_CERT: ${SMQ_TWINS_HTTP_SERVER_CERT}
      SMQ_TWINS_HTTP_SERVER_KEY: ${SMQ_TWINS_HTTP_SERVER_KEY}
      SMQ_TWINS_CACHE_URL: ${SMQ_TWINS_CACHE_URL}
      SMQ_ES_URL: ${SMQ_ES_URL}
      SMQ_CLIENTS_STANDALONE_ID: ${SMQ_CLIENTS_STANDALONE_ID}
      SMQ_CLIENTS_STANDALONE_TOKEN: ${SMQ_CLIENTS_STANDALONE_TOKEN}
      SMQ_TWINS_DB_HOST: ${SMQ_TWINS_DB_HOST}
      SMQ_TWINS_DB_PORT: ${SMQ_TWINS_DB_PORT}
      SMQ_TWINS_DB_NAME: ${SMQ_TWINS_DB_NAME}
      SMQ_AUTH_GRPC_URL: ${SMQ_AUTH_GRPC_URL}
      SMQ_AUTH_GRPC_TIMEOUT: ${SMQ_AUTH_GRPC_TIMEOUT}
      SMQ_AUTH_GRPC_CLIENT_CERT: ${SMQ_AUTH_GRPC_CLIENT_CERT:+/auth-grpc-client.crt}
      SMQ_AUTH_GRPC_CLIENT_KEY: ${SMQ_AUTH_GRPC_CLIENT_KEY:+/auth-grpc-client.key}
      SMQ_AUTH_GRPC_SERVER_CA_CERTS: ${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+/auth-grpc-server-ca.crt}
      SMQ_MESSAGE_BROKER_URL: ${SMQ_MESSAGE_BROKER_URL}
      SMQ_JAEGER_URL: ${SMQ_JAEGER_URL}
      SMQ_JAEGER_TRACE_RATIO: ${SMQ_JAEGER_TRACE_RATIO}
      SMQ_SEND_TELEMETRY: ${SMQ_SEND_TELEMETRY}
      SMQ_TWINS_INSTANCE_ID: ${SMQ_TWINS_INSTANCE_ID}
    ports:
      - ${SMQ_TWINS_HTTP_PORT}:${SMQ_TWINS_HTTP_PORT}
    networks:
       supermq-base-net:
    depends_on:
      - twins-db
      - twins-redis
    volumes:
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_AUTH_GRPC_CLIENT_CERT:-./ssl/certs/dummy/client_cert}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_CERT:+.crt}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_AUTH_GRPC_CLIENT_KEY:-./ssl/certs/dummy/client_key}
        target: /auth-grpc-client${SMQ_AUTH_GRPC_CLIENT_KEY:+.key}
        bind:
          create_host_path: true
      - type: bind
        source: ${SMQ_ADDONS_CERTS_PATH_PREFIX}${SMQ_AUTH_GRPC_SERVER_CA_CERTS:-./ssl/certs/dummy/server_ca}
        target: /auth-grpc-server-ca${SMQ_AUTH_GRPC_SERVER_CA_CERTS:+.crt}
        bind:
          create_host_path: true
